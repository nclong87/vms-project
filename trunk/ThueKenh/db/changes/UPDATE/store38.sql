----------------------------------------------------------  DDL for Procedure PROC_DELETE_PLTHAYTHE--------------------------------------------------------set define off;  CREATE OR REPLACE PROCEDURE "THUEKENH"."PROC_DELETE_PLTHAYTHE" (p_id in number,p_tenphuluc in varchar2,p_useraction in varchar2) ASBEGIN  for rec in (select * from phuluc where phulucthaythe_id = p_id) loop    update phuluc set ngayhethieuluc = null, phulucthaythe_id = null where id = rec.id;    PROC_INSERT_LICHSU_PHULUC(p_useraction,rec.ID,7,'<root><element><id>'||p_id||'</id><tenphuluc>'||p_tenphuluc||'</tenphuluc></element></root>');  end loop;END PROC_DELETE_PLTHAYTHE;/----------------------------------------------------------  DDL for Procedure PROC_DELETE_PHULUC--------------------------------------------------------set define off;  CREATE OR REPLACE PROCEDURE "THUEKENH"."PROC_DELETE_PHULUC" (pi_array in TABLE_VARCHAR,usercreate_ in varchar2,timeaction_ in number) ASi INTEGER := 1;BEGIN  --for i in pi_array.first .. pi_array.last loop  for rec in (SELECT *  FROM PHULUC  where DELETED = 0 and ID in (select * from table(pi_array))) loop    update PHULUC set DELETED = timeaction_ where ID = rec.ID;    PROC_INSERT_LICHSU_PHULUC(usercreate_,rec.ID,3,'');    update SUCOKENH set PHULUC_ID = null where PHULUC_ID = rec.ID;    PROC_DELETE_PLTHAYTHE(rec.ID,rec.tenphuluc,usercreate_);  end loop;END PROC_DELETE_PHULUC;/----------------------------------------------------------  DDL for Function FIND_SUCOBYPHULUC--------------------------------------------------------  CREATE OR REPLACE FUNCTION "THUEKENH"."FIND_SUCOBYPHULUC" (pPhuLucId in varchar2) RETURN SYS_REFCURSOR ASl_cursor SYS_REFCURSOR;vNgayHieuLuc date;vNgayHetHieuLuc date;vChiTietPhuLucId number;BEGIN  select NGAYHIEULUC,NGAYHETHIEULUC,CHITIETPHULUC_ID into vNgayHieuLuc,vNgayHetHieuLuc,vChiTietPhuLucId from phuluc where id = pPhuLucId;  if(vNgayHetHieuLuc is null) then    vNgayHetHieuLuc := SYSDATE;  end if;  OPEN l_cursor FOR select t.id,t.tuyenkenh_id,t.phuluc_id as suco_phuluc,t.thoidiembatdau,t.thoidiemketthuc,t.thoigianmll,t1.thanhtien as dongia from sucokenh t right join chitietphuluc_tuyenkenh t1 on t.tuyenkenh_id = t1.tuyenkenh_idwhere t.thoidiembatdau >= TO_MILLISECOND(vNgayHieuLuc) and t.thoidiemketthuc <= TO_MILLISECOND(vNgayHetHieuLuc) and t1.chitietphuluc_id = vChiTietPhuLucId;  RETURN l_cursor;END FIND_SUCOBYPHULUC;/----------------------------------------------------------  DDL for Function FIND_PHULUC_HIEULUC--------------------------------------------------------  CREATE OR REPLACE FUNCTION "THUEKENH"."FIND_PHULUC_HIEULUC" (tuyenkenh_id_ in varchar2,date_ in date) RETURN SYS_REFCURSOR ASl_cursor SYS_REFCURSOR;BEGIN  OPEN l_cursor FOR select t.*,t1.DONGIA,t1.THANHTIEN from phuluc t left join chitietphuluc_tuyenkenh t1 on t.CHITIETPHULUC_ID = t1.CHITIETPHULUC_IDwhere t.deleted = 0 and t1.tuyenkenh_id = tuyenkenh_id_ and ( (t.ngayhethieuluc is null and t.ngayhieuluc  < date_ + 1 ) or (t.ngayhethieuluc is not null and t.ngayhethieuluc >= date_ and t.ngayhieuluc < date_ + 1 ) );  RETURN l_cursor;END FIND_PHULUC_HIEULUC;/----------------------------------------------------------  DDL for Procedure SUCOKENH_UPDATE_PHULUC--------------------------------------------------------set define off;  CREATE OR REPLACE PROCEDURE "THUEKENH"."SUCOKENH_UPDATE_PHULUC" (pSuCoId  in number,pPhuLucId number,pGiamTruMLL number,pCuocthang number,pFlag number) ASi INTEGER := 0;BEGIN  --if(pFlag = 1) then --backup current data   -- insert into sucokenh_bk(SUCOKENH_ID,PHULUC_ID,GIAMTRUMLL,CREATE_TIME) select id,phuluc_id,giamtrumll,sysdate from sucokenh where id = pSuCoId;  --end if;  update sucokenh set PHULUC_ID = pPhuLucId,GIAMTRUMLL = pGiamTruMLL, CUOCTHANG = pcuocthang where ID = pSuCoId;END SUCOKENH_UPDATE_PHULUC;/update phuluc set ngayhethieuluc = null, phulucthaythe_id = null where id = 213;