----------------------------------------------------------  DDL for Procedure SEND_EMAIL--------------------------------------------------------set define off;  CREATE OR REPLACE PROCEDURE "THUEKENH"."SEND_EMAIL" (p_tuyenkenh_id IN VARCHAR2, p_type IN NUMBER,p_content IN CLOB)  ASv_email_content CLOB;v_phongban_id number;BEGIN  select phongban_id into v_phongban_id from TUYENKENH where ID = p_tuyenkenh_id;  if(p_content is null or p_content = '') then    if(p_type = 1) then -- bat dau ban giao      v_email_content := 'Tuyen kenh '||p_tuyenkenh_id|| ' : bat dau ban giao';    elsif (p_type = 2) then -- toi deadline chua ban giao      v_email_content := 'Tuyen kenh '||p_tuyenkenh_id|| ' : da den deadline nhung chua ban giao';    elsif (p_type = 3) then -- da ban giao xong      v_email_content := 'Tuyen kenh '||p_tuyenkenh_id|| ' : da ban giao xong';    end if;  else    v_email_content := p_content;  end if;END SEND_EMAIL;/----------------------------------------------------------  DDL for Procedure SEND_SMS--------------------------------------------------------set define off;  CREATE OR REPLACE PROCEDURE "THUEKENH"."SEND_SMS" (p_tuyenkenh_id IN VARCHAR2, p_type IN NUMBER,p_content in varchar2) ASv_sms_content varchar2(1000);v_phongban_id number;BEGIN  select phongban_id into v_phongban_id from TUYENKENH where ID = p_tuyenkenh_id;  if(p_content is null or p_content = '') then    if(p_type = 1) then -- bat dau ban giao      v_sms_content := 'Tuyen kenh '||p_tuyenkenh_id|| ' : bat dau ban giao';    elsif (p_type = 2) then -- toi deadline chua ban giao      v_sms_content := 'Tuyen kenh '||p_tuyenkenh_id|| ' : da den deadline nhung chua ban giao';    elsif (p_type = 3) then -- da ban giao xong      v_sms_content := 'Tuyen kenh '||p_tuyenkenh_id|| ' : da ban giao xong';    end if;  else    v_sms_content := p_content;  end if;  for rec in (select * from ACCOUNTS where IDPHONGBAN = v_phongban_id) loop    if(rec.phone is not null) then      insert into sms values (sysdate,rec.phone,v_sms_content);    end if;  end loop;END SEND_SMS;/----------------------------------------------------------  DDL for Procedure PROC_SCHEDULE--------------------------------------------------------set define off;  CREATE OR REPLACE PROCEDURE "THUEKENH"."PROC_SCHEDULE" AS BEGIN  for rec in (select t.ID,t.TUYENKENH_ID from TUYENKENHDEXUAT t left join TUYENKENH t1 on t.TUYENKENH_ID=t1.ID where t.NGAYHENBANGIAO < sysdate and t.TRANGTHAI = 0 and t.FLAG_SENDMAIL is null) loop    SEND_SMS(rec.TUYENKENH_ID,2,null);    SEND_EMAIL(rec.TUYENKENH_ID,2,null);    update TUYENKENHDEXUAT set FLAG_SENDMAIL = 1 where ID = rec.ID;  end loop;END PROC_SCHEDULE;/ALTER TABLE TUYENKENHDEXUAT ADD (FLAG_SENDMAIL NUMBER );ALTER TABLE ACCOUNTS ADD (EMAIL VARCHAR2(200) );ALTER TABLE ACCOUNTS ADD (PHONE VARCHAR2(50) );----------------------------------------------------------  DDL for Function SAVE_ACCOUNT--------------------------------------------------------  CREATE OR REPLACE FUNCTION "THUEKENH"."SAVE_ACCOUNT" (	id_	in VARCHAR2,	username_ in VARCHAR2,	password_ in VARCHAR2,	active_ in NUMBER,	idkhuvuc_ in NUMBER,	idphongban_ in NUMBER,  idgroup_ in varchar2,  mainmenu_ in varchar2,  p_email in varchar2,  p_phone in varchar2)RETURN NUMBER ASn NUMBER;BEGIN	if(id_ is not null) then --update    if(password_ is not null) then      update ACCOUNTS set IDGROUP = idgroup_, PASSWORD = password_, ACTIVE = active_, IDKHUVUC = idkhuvuc_, IDPHONGBAN = idphongban_, MAINMENU = mainmenu_, EMAIL = p_email, PHONE = p_phone      where ID = to_number(id_);    else      update ACCOUNTS set IDGROUP = idgroup_, ACTIVE = active_, IDKHUVUC = idkhuvuc_, IDPHONGBAN = idphongban_,MAINMENU = mainmenu_, EMAIL = p_email, PHONE = p_phone where ID = to_number(id_);    end if;	else --insert		n := SEQ_ACCOUNTS.nextval;    if(mainmenu_ <> '-1') then      insert into ACCOUNTS(ID,USERNAME,PASSWORD,IDGROUP,ACTIVE,IDKHUVUC,IDPHONGBAN,MAINMENU,EMAIL,PHONE) values (n,username_,password_, idgroup_, active_,idkhuvuc_,idphongban_,mainmenu_,p_email,p_phone);    else      insert into ACCOUNTS(ID,USERNAME,PASSWORD,IDGROUP,ACTIVE,IDKHUVUC,IDPHONGBAN,MAINMENU,EMAIL,PHONE) values (n,username_,password_, idgroup_, active_,idkhuvuc_,idphongban_,null,p_email,p_phone);    end if;    return n;  end if;  RETURN id_;END SAVE_ACCOUNT;/----------------------------------------------------------  DDL for Function FN_FIND_ACCOUNTS--------------------------------------------------------  CREATE OR REPLACE FUNCTION "THUEKENH"."FN_FIND_ACCOUNTS" (iDisplayStart IN NUMBER,   iDisplayLength IN NUMBER, username_ in varchar2,phongban_ in varchar2,khuvuc_ in varchar2,active_ in varchar2) RETURN SYS_REFCURSOR ASl_cursor SYS_REFCURSOR;v_vcsql VARCHAR2(1000);v_vcsqlwhere VARCHAR2(500);i NUMBER;BEGIN	v_vcsqlwhere := ' 1 = 1 ';	if(username_ is not null) then		v_vcsqlwhere := v_vcsqlwhere ||' and USERNAME like '''||username_||'%'' ';	end if;	if(phongban_ is not null) then		v_vcsqlwhere := v_vcsqlwhere ||' and IDPHONGBAN = '||phongban_||' ';	end if;	if(khuvuc_ is not null) then		v_vcsqlwhere := v_vcsqlwhere ||' and IDKHUVUC = '||khuvuc_||' ';	end if;	if(active_ is not null) then		v_vcsqlwhere := v_vcsqlwhere ||' and t0.ACTIVE = '||active_||' ';	end if;	v_vcsql := 'select rownum as rn,dulieu.* from (SELECT t0.ID,USERNAME,PASSWORD,IDGROUP,t0.ACTIVE,IDKHUVUC,IDPHONGBAN,TENPHONGBAN,TENKHUVUC,NAMEMENU,EMAIL,PHONE FROM ACCOUNTS t0 left join PHONGBAN t1 on t0.IDPHONGBAN = t1.ID left join KHUVUC t2 on t0.IDKHUVUC = t2.ID left join MENU t3 on t0.MAINMENU = t3.ID  WHERE ' || v_vcsqlwhere || ' order by ID desc) dulieu ';	v_vcsql := 'SELECT * FROM (' || v_vcsql || ') WHERE rn > ' || iDisplayStart || ' and rn <= ' || (iDisplayStart+iDisplayLength);	--dbms_output.put_line(v_vcsql); --test(v_vcsql);	OPEN l_cursor FOR v_vcsql;	RETURN l_cursor;END FN_FIND_ACCOUNTS;/CREATE TABLE SMS (  DATE_SEND DATE , PHONE VARCHAR2(50) , CONTENT VARCHAR2(1000) );